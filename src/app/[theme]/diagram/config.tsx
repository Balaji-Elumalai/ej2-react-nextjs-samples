export const DiagramSampleOrder: Object = [
    { 'path': 'diagram/default-functionality', 'component': 'Default', 'name': 'Flow Chart', 'description': 'This sample visualizes the processing of an order placed using credit card with built-in flow shapes.', 'order': '01', 'category': 'Getting Started' },
    { 'path': 'diagram/shape-gallery', 'component': 'ShapeGallery', 'name': 'Shapes', 'description': 'This sample illustrates list of built-in shapes available in our JavaScript Diagram Library which includes basic shapes, flow shapes, and BPMN shapes.', 'order': '01', 'category': 'Getting Started' },
    { 'path': 'diagram/getting-started-node', 'component': 'GettingStartedNodes', 'name': 'Nodes', 'description': 'This sample visualizes the different stages of a software development life cycle using a circular flow diagram.', 'order': '01', 'category': 'Getting Started' },
    { 'path': 'diagram/custom-shapes', 'component': 'HtmlNode','name': 'HTML Shapes', 'description': 'This sample demonstrates how to host a HTML elements inside a node. In this example, a Gauge control is hosted inside a HTML Node.', 'order': '01', 'category': 'Getting Started' },
    { 'path': 'diagram/zoom-and-pan', 'component': 'ZoomAndPan', 'name': 'Zooming and Panning', 'description': 'This sample illustrates how to zoom and pan, reset, fitToPage, bringinToView and bringinToCenter in the diagram.', 'order': '02', 'category': 'Interactive Features' },
    { 'path': 'diagram/scrolling', 'component': 'ScrollingSample', 'name': 'Scrolling', 'description': 'This example illustrates how to scroll a diagram using vertical and horizontal scrollbars. The scroll limit property helps limit the scrolling area.', 'order': '02', 'category': 'Interactive Features' },
    { 'path': 'diagram/drawing-tool', 'component': 'DrawingTools', 'name': 'Drawing Tools', 'description': 'This sample visualizes how to build a diagram interactively using drawing tools. Continuous draw option, snapping are enabled to easily draw diagrams.', 'order': '02', 'category': 'Interactive Features' },
    { 'path': 'diagram/hierarchical-model', 'component': 'HierarchicalModel', 'name': 'Hierarchical Tree', 'description': 'This sample illustrates a generating hierarchical tree from right to left orientation with external data source.', 'order': '03', 'category': 'Automatic Layouts' },
    { 'path': 'diagram/organization-model', 'component': 'OrganizationModel', 'name': 'Organization Chart', 'description': 'This sample illustrates a simple business management structure that is built from an external data source.', 'order': '03', 'category': 'Automatic Layouts' },
    { 'path': 'diagram/radial-tree', 'component': 'Radial', 'name': 'Radial Tree', 'order': '03', 'description': 'This sample demonstrates a huge organizational structure using a compact layout model. Radial tree layout algorithm is used to build such a layout.', 'category': 'Automatic Layouts' }
];